

Basic Operation

Commands
 - a lot of MongoDB functionalirt can be accompilshed through the use of commands. Commnads are run against a database

Authentication



default write concerns
{ w: 1, wtimeout: 0 }

Give DB objs some nice toStr

On connection, check the mongo version, assert it's >= 2.6

explain this:
the plan is to give a basic level of support, so should the mongo API grow (as it has been doing) then this driver doesn't get outdated.


For v1.0
--------
GridFs 
 - http://docs.mongodb.org/manual/core/gridfs/
 - http://docs.mongodb.org/manual/applications/gridfs
 - http://docs.mongodb.org/manual/reference/gridfs/

Tidy up ConnectionManagerPooled, make clients wait for a free connection.

Automatically connect to proper server, and failover, when connecting to a replica set
http://docs.mongodb.org/meta-driver/latest/legacy/connect-driver-to-replica-set/
http://api.mongodb.org/java/2.10.0/index.html?com/mongodb/MongoClient.html

When writing, maybe convert MongoMaps into Document Objs that cache the size? For speed!



For Future
----------
Role Commands (new in 2.6)
Query Plan Cache Commands (new in 2.6)
Geospatial Commands
Tailable Cursors
Parse a connection string


Bad fantomongo
==============

Fixed ObjectId:
 - ObjectId had no notion of pid

Fixed BsonReader:
 - BSON Timestamps were incorrectly converted to Fantom DateTime objects
 - BSON strings could not be read if they contain non-ASCII characters (byte vs char issue) 
 - Reading unsigned Ints when they should be signed Ints
 - Reading Regex's messed up the bytes read count -> warning
 - Reading Binary types lost the subtype
 - No support for BSON CODE

Fixed BsonWriter:
 - No support for BSON CODE
 - Incorrect length written for non-ASCII strings (byte vs char issue)

Had no Timestamp obj
Only ObjectId was Fantom serialisable 